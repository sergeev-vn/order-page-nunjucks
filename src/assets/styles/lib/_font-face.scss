// A mixin for writing @font-face rules in SASS.
// See: https://gist.github.com/jonathantneal/d0460e5c2d5d7f9bc5e6
//
// Usage:
// Create a font face rule. Embedded OpenType, WOFF2, WOFF, TrueType, and SVG files are automatically sourced.
//
// @include font-face("Samplino", "fonts/Samplino")
//
// Rendered as CSS:
// @font-face {
//     font-family: "Samplino";
//     src: url("fonts/Samplino.eot?") format("eot"),
//          url("fonts/Samplino.woff2") format("woff2"),
//          url("fonts/Samplino.woff") format("woff"),
//          url("fonts/Samplino.ttf") format("truetype"),
//          url("fonts/Samplino.svg#Samplino") format("svg");
// }
//
// Create a font face rule that applies to bold and italic text.
//
// @include font-face("Samplina Neue", "fonts/SamplinaNeue", bold, italic);
//
// @font-face {
//     font-family: "Samplina Neue";
//     font-style: italic;
//     font-weight: bold;
//     src: url("fonts/SamplinaNeue.eot?") format("eot"),
//          url("fonts/SamplinaNeue.woff2") format("woff2"),
//          url("fonts/SamplinaNeue.woff") format("woff"),
//          url("fonts/SamplinaNeue.ttf") format("truetype"),
//          url("fonts/SamplinaNeue.svg#Samplina_Neue") format("svg");
// }

// =============================================================================
// String Replace
// =============================================================================

@function str-replace($string, $search, $replace: '') {
	$index: str-index($string, $search);

	@if $index {
		@return str-slice($string, 1, $index - 1) + $replace +
			str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
	}

	@return $string;
}

// =============================================================================
// Font Face
// =============================================================================

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
	$src: null;

	$extmods: (
		eot: '?',
		svg: '#' + str-replace($name, ' ', '_'),
	);

	$formats: (
		otf: 'opentype',
		ttf: 'truetype',
	);

	@each $ext in $exts {
		$extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
		$format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
		$src: append($src, url(quote($path + '.' + $extmod)) format(quote($format)), comma);
	}

	@font-face {
		font-family: quote($name);
		font-style: $style;
		font-weight: $weight;
		src: $src;
	}
}

@font-face {
	font-family: 'Roboto';
	src: local('Roboto Black'), local('Roboto-Black'),
		url('../fonts/Roboto-Black.woff2') format('woff2'),
		url('../fonts/Roboto-Black.woff') format('woff');
	font-weight: 900;
	font-style: normal;
	font-display: swap;
}

@font-face {
	font-family: 'Roboto';
	src: local('Roboto Black Italic'), local('Roboto-BlackItalic'),
		url('../fonts/Roboto-BlackItalic.woff2') format('woff2'),
		url('../fonts/Roboto-BlackItalic.woff') format('woff');
	font-weight: 900;
	font-style: italic;
	font-display: swap;
}

@font-face {
	font-family: 'Roboto';
	src: local('Roboto Bold'), local('Roboto-Bold'), url('../fonts/Roboto-Bold.woff2') format('woff2'),
		url('../fonts/Roboto-Bold.woff') format('woff');
	font-weight: bold;
	font-style: normal;
	font-display: swap;
}

@font-face {
	font-family: 'Roboto';
	src: local('Roboto Bold Italic'), local('Roboto-BoldItalic'),
		url('../fonts/Roboto-BoldItalic.woff2') format('woff2'),
		url('../fonts/Roboto-BoldItalic.woff') format('woff');
	font-weight: bold;
	font-style: italic;
	font-display: swap;
}

@font-face {
	font-family: 'Roboto';
	src: local('Roboto Thin Italic'), local('Roboto-ThinItalic'),
		url('../fonts/Roboto-ThinItalic.woff2') format('woff2'),
		url('../fonts/Roboto-ThinItalic.woff') format('woff');
	font-weight: 100;
	font-style: italic;
	font-display: swap;
}

@font-face {
	font-family: 'Roboto';
	src: local('Roboto Thin'), local('Roboto-Thin'), url('../fonts/Roboto-Thin.woff2') format('woff2'),
		url('../fonts/Roboto-Thin.woff') format('woff');
	font-weight: 100;
	font-style: normal;
	font-display: swap;
}

@font-face {
	font-family: 'Roboto';
	src: local('Roboto Medium Italic'), local('Roboto-MediumItalic'),
		url('../fonts/Roboto-MediumItalic.woff2') format('woff2'),
		url('../fonts/Roboto-MediumItalic.woff') format('woff');
	font-weight: 500;
	font-style: italic;
	font-display: swap;
}

@font-face {
	font-family: 'Roboto';
	src: local('Roboto Medium'), local('Roboto-Medium'),
		url('../fonts/Roboto-Medium.woff2') format('woff2'),
		url('../fonts/Roboto-Medium.woff') format('woff');
	font-weight: 500;
	font-style: normal;
	font-display: swap;
}

@font-face {
	font-family: 'Roboto';
	src: local('Roboto Italic'), local('Roboto-Italic'),
		url('../fonts/Roboto-Italic.woff2') format('woff2'),
		url('../fonts/Roboto-Italic.woff') format('woff');
	font-weight: normal;
	font-style: italic;
	font-display: swap;
}

@font-face {
	font-family: 'Roboto';
	src: local('Roboto Light'), local('Roboto-Light'),
		url('../fonts/Roboto-Light.woff2') format('woff2'),
		url('../fonts/Roboto-Light.woff') format('woff');
	font-weight: 300;
	font-style: normal;
	font-display: swap;
}

@font-face {
	font-family: 'Roboto';
	src: local('Roboto'), local('Roboto-Regular'),
		url('../fonts/Roboto-Regular.woff2') format('woff2'),
		url('../fonts/Roboto-Regular.woff') format('woff');
	font-weight: normal;
	font-style: normal;
	font-display: swap;
}

@font-face {
	font-family: 'Roboto';
	src: local('Roboto Light Italic'), local('Roboto-LightItalic'),
		url('../fonts/Roboto-LightItalic.woff2') format('woff2'),
		url('../fonts/Roboto-LightItalic.woff') format('woff');
	font-weight: 300;
	font-style: italic;
	font-display: swap;
}
